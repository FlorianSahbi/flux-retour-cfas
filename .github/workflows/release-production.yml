name: Release version production
on:
  # push:
  #   branches: [master]
  workflow_dispatch:
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v1
        with:
          node-version: 16.6.0
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Run yarn Install
        run: yarn install

      - name: bump
        run: yarn npm:release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  ciserver:
    needs: release
    # avoids buggy Github Actions behaviour triggering infinite loop of release commits
    if: "!startsWith(github.event.head_commit.message, 'chore(release')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 16.6.0
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-

      # Install dependencies
      - name: Run yarn Install
        run: yarn install

      # Install ui dependencies
      - name: Run yarn Install ui
        run: yarn --cwd ui install --frozen-lockfile

      # Install yarn dependencies
      - name: Run yarn Install server
        run: yarn --cwd server install --frozen-lockfile

      # Lint
      - name: Run Lint
        run: yarn lint

  ciui:
    needs: release
    # avoids buggy Github Actions behaviour triggering infinite loop of release commits
    if: "!startsWith(github.event.head_commit.message, 'chore(release')"
    runs-on: ubuntu-latest
    steps:
      # Checks-out the repository
      - uses: actions/checkout@v2

      # Install dependencies
      - name: Run Yarn Install
        run: |
          yarn --cwd ui install
